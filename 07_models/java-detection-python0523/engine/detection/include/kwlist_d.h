/*-------------------------------------------------------------------------
 *
 * kwlist_d.h
 *    List of keywords represented as a ScanKeywordList.
 *
 * Portions Copyright (c) 1996-2022, PostgreSQL Global Development Group
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 * NOTES
 *  ******************************
 *  *** DO NOT EDIT THIS FILE! ***
 *  ******************************
 *
 *  It has been GENERATED by src/tools/gen_keywordlist.pl
 *
 *-------------------------------------------------------------------------
 */

#ifndef KWLIST_D_H
#define KWLIST_D_H

static const char ScanKeywords_kw_string[] =
	"and\0"
	"beans\0"
	"bufferedinputstream\0"
	"bufferedreader\0"
	"bytearrayinputstream\0"
	"bytearrayoutputstream\0"
	"chararrayreader\0"
	"class\0"
	"classloader\0"
	"collections\0"
	"command\0"
	"compiler\0"
	"content\0"
	"context\0"
	"datainputstream\0"
	"debug\0"
	"default_member_access\0"
	"entitymanager\0"
	"expression\0"
	"file\0"
	"filedescriptor\0"
	"fileinputstream\0"
	"fileoutputstream\0"
	"filepermission\0"
	"filereader\0"
	"filewriter\0"
	"filterinputstream\0"
	"filteroutputstream\0"
	"filterreader\0"
	"inheritablethreadlocal\0"
	"inputstream\0"
	"inputstreamreader\0"
	"integer\0"
	"io\0"
	"java\0"
	"javax\0"
	"lang\0"
	"linenumberreader\0"
	"memberaccess\0"
	"message\0"
	"misc\0"
	"new\0"
	"not\0"
	"number\0"
	"object\0"
	"objectoutputstream\0"
	"ognl\0"
	"ognlcontext\0"
	"or\0"
	"outputstream\0"
	"package\0"
	"persistence\0"
	"pipedoutputstream\0"
	"pipedreader\0"
	"printstream\0"
	"process\0"
	"processbuilder\0"
	"pushbackinputstream\0"
	"reader\0"
	"reflect\0"
	"runtime\0"
	"runtimepermission\0"
	"scanner\0"
	"script\0"
	"scriptenginemanage\0"
	"securitymanager\0"
	"servlet\0"
	"servletcontext\0"
	"shutdown\0"
	"string\0"
	"stringbuilder\0"
	"stringreader\0"
	"sun\0"
	"system\0"
	"thread\0"
	"threadgroup\0"
	"threadlocal\0"
	"type\0"
	"unsafe\0"
	"util\0"
	"xmldecode\0"
	"xor";

static const uint16 ScanKeywords_kw_offsets[] = {
	0,
	4,
	10,
	30,
	45,
	66,
	88,
	104,
	110,
	122,
	134,
	142,
	151,
	159,
	167,
	183,
	189,
	211,
	225,
	236,
	241,
	256,
	272,
	289,
	304,
	315,
	326,
	344,
	363,
	376,
	399,
	411,
	429,
	437,
	440,
	445,
	451,
	456,
	473,
	486,
	494,
	499,
	503,
	507,
	514,
	521,
	540,
	545,
	557,
	560,
	573,
	581,
	593,
	611,
	623,
	635,
	643,
	658,
	678,
	685,
	693,
	701,
	719,
	727,
	734,
	753,
	769,
	777,
	792,
	801,
	808,
	822,
	835,
	839,
	846,
	853,
	865,
	877,
	882,
	889,
	894,
	904,
};

#define SCANKEYWORDS_NUM_KEYWORDS 82

static int
ScanKeywords_hash_func(const void *key, size_t keylen)
{
	static const int16 h[165] = {
		74,    32767, 69,    131,   -3,    -6,    76,    32767,
		28,    139,   32767, 0,     -9,    32767, 32767, 32767,
		32767, -56,   51,    84,    -111,  32767, 0,     32767,
		32767, 58,    34,    2,     32767, -113,  32767, 13,
		70,    -1,    32767, 32767, 33,    67,    49,    34,
		0,     96,    131,   -54,   97,    32767, 32767, 32767,
		32767, 8,     32767, 15,    6,     32767, 32767, 38,
		32767, 31,    49,    0,     3,     32767, -37,   -12,
		0,     0,     117,   32767, 32767, 32767, 32767, 0,
		0,     139,   32767, 2,     4,     56,    13,    -29,
		28,    -32,   32767, 61,    32767, 32767, 0,     32767,
		32767, 32767, 0,     -94,   32767, 0,     0,     32767,
		48,    -67,   32767, 30,    22,    0,     69,    32767,
		11,    39,    32767, 32767, 37,    90,    0,     32767,
		32767, 0,     32767, 32767, 41,    32767, 126,   23,
		-60,   32767, 23,    0,     48,    32767, 0,     30,
		132,   32767, 0,     32767, 32767, 32767, 43,    0,
		32767, 92,    -109,  32767, 52,    32767, 32767, 0,
		31,    0,     13,    0,     12,    17,    48,    40,
		0,     32767, 0,     9,     0,     32767, -44,   -113,
		32767, 62,    38,    16,    0
	};

	const unsigned char *k = (const unsigned char *) key;
	uint32		a = 0;
	uint32		b = 1;

	while (keylen--)
	{
		unsigned char c = *k++ | 0x20;

		a = a * 257 + c;
		b = b * 127 + c;
	}
	return h[a % 165] + h[b % 165];
}

static const ScanKeywordList ScanKeywords = {
	ScanKeywords_kw_string,
	ScanKeywords_kw_offsets,
	ScanKeywords_hash_func,
	SCANKEYWORDS_NUM_KEYWORDS,
	22
};

#endif							/* KWLIST_D_H */
