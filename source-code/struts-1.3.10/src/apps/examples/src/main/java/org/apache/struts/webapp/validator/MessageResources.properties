#   Licensed to the Apache Software Foundation (ASF) under one or more
#   contributor license agreements.  See the NOTICE file distributed with
#   this work for additional information regarding copyright ownership.
#   The ASF licenses this file to You under the Apache License, Version 2.0
#   (the "License"); you may not use this file except in compliance with
#   the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

button.cancel=Cancel
button.confirm=Confirm
button.reset=Reset
button.save=Save

# Errors
errors.footer=
errors.header=<h3><font color="red">Validation Error</font></h3>You must correct the following error(s) before proceeding:
errors.ioException=I/O exception rendering error messages: {0}
error.database.missing=<li>User database is missing, cannot validate logon credentials</li>
errors.required={0} is required.
errors.minlength={0} can not be less than {1} characters.
errors.maxlength={0} can not be greater than {1} characters.
errors.invalid={0} is invalid.

html.li.open=<li>
html.li.close=</li>
file.location=The {0} file for this page can be found in the {1} directory.

errors.byte={0} must be an byte.
errors.short={0} must be an short.
errors.integer={0} must be an integer.
errors.long={0} must be an long.
errors.float={0} must be an float.
errors.double={0} must be an double.

errors.date={0} is not a date.

errors.range={0} is not in the range {1} through {2}.

errors.creditcard={0} is not a valid credit card number.

errors.email={0} is an invalid e-mail address.
errors.url={0} is an invalid url.

# Index Page
index.title=Struts Validator
index.power=Powered by Struts

# Registration Form
registrationForm.title=Registration
registrationForm.title.create=Register
registrationForm.title.edit=Edit User Information
registrationForm.firstname.displayname=First Name
registrationForm.lastname.displayname=Last Name
registrationForm.addr.displayname=Address
registrationForm.city.displayname=City
registrationForm.stateprov.displayname=State
registrationForm.zippostal.displayname=Zip
registrationForm.phone.displayname=Phone
registrationForm.email.displayname=E-mail
registrationForm.lastname.maskmsg=Last Name can only be letters, no spaces.

# JavaScript Registration Form
jsRegistrationForm.title=JavaScript Registration Form
jsRegistrationForm.description=with client side JavaScript validation and server side validation

# Muli-page Registration Form
multiRegistrationForm.title=Multi-page Registration Form
multiRegistrationForm.description=multi-page example with client side JavaScript validation and server side validation

# Type form
typeForm.name.displayname=String Field
typeForm.byte.displayname=Byte Field
typeForm.checkbox.wouldrecommend=I would recommend
typeForm.checkbox.used.languages=Programming Languages used
typeForm.creditCard.displayname=Credit Card
typeForm.date.displayname=Date Field
typeForm.description=Example validating some primitive numbers, a range on the integer field, a date, and a credit card number.
typeForm.double.displayname=Double Field
typeForm.float.displayname=Float Field
typeForm.floatRange.displayname=Float Range Field
typeForm.integer.displayname=Integer Field
typeForm.intRange.displayname=Integer Range Field
typeForm.mask.displayname=Mask Field
typeForm.email.displayname=Email Field
typeForm.url.displayname=URL Field
typeForm.minMaxLength.displayname=Min/Max Length Field
typeForm.long.displayname=Long Field
typeForm.nested.name.displayname=Name
typeForm.nested=Nested Text
typeForm.option.os.list=Operating Systems in use
typeForm.option.satisfaction=Satisfaction
typeForm.option.select.many=&lt;Select one or more&gt;
typeForm.option.select.one=&lt;Select One&gt;
typeForm.radio.overall.satisfaction=Overall Satisfaction
typeForm.short.displayname=Short Field
typeForm.title.create=Type Form
typeForm.title=Type Form
typeForm.mask.error={0} Must only contain upper case alpahabetic letters (i.e. A-Z)

# JavaScript Type Form
jsTypeForm.title=JavaScript Type Form
jsTypeForm.description=with JavaScript Validation and Server Validation

# Bundles Example form
bundles.title=Resource Bundles
bundlesExamples.title=Bundles Example Form
bundlesExamples.description=Examples of configuring Validator to use alternative/non-default resource bundles.
javascript.bundlesExamples.title=Javascript Bundles Example Form
javascript.bundlesExamples.description=Javascript examples of configuring Validator to use alternative/non-default resource bundles.

bundlesForm.label.name=Name
bundlesForm.label.address=Address
bundlesForm.label.phone=Phone Number
bundlesForm.label.dob=Date of Birth
bundlesForm.label.age=Age

bundlesExamples.notes.heading=Notes on Using Validator and Resources/Bundles:
bundlesExamples.notes1=<b>Non-Resource Messages:</b> - you can specify error messages directly in the <i>validation.xml</i> file using by setting resource="false" in &lt;msg&gt; element. Validation for the <i>name</i> field is an example of this.
bundlesExamples.notes2=<b>Alternative Bundles for Messages</b> - specifying an alternative bundle for an error message in the <i>validation.xml</i> file (using &lt;msg bundle="altBundle"/&gt;) takes precedence over any bundle specified in the &lt;html:errors/&gt;, &lt;html:messages/&gt; or &lt;html:javascript/&gt; tags.
bundlesExamples.notes3=<b>Alternative Bundles for Arguments</b> - specifying an alternative bundle for an error message argument in the <i>validation.xml</i> file (using &lt;arg bundle="altBundle"/&gt;) takes precedence over any bundle specified in the &lt;html:errors/&gt;, &lt;html:messages/&gt; or &lt;html:javascript/&gt; tags.
bundlesExamples.notes4=If you specify an alternative bundle for a message (using &lt;msg bundle="altBundle"/&gt;) , any &lt;arg&gt; elements which don't have a bundle specified also <i>inherit</i> the same bundle. Validation for the <i>address</i> field is an example of this.
bundlesExamples.notes5=You can specify different bundles for both the &lt;msg&gt; and &lt;arg&gt; elements in the <i>validation.xml</i>. Validation for the <i>phone</i> field is an example of this.
bundlesExamples.notes5=Validation for the <i>Date of Birth</i> field uses the default bundle for the message, but specifies and alternative bundle for the argument.
bundlesExamples.notes6=The &lt;html:javascript/&gt; tag now has a <i>bundle</i> attribute, so that the JavaScript messages can be generated in the same way as the &lt;html:errors/&gt; and &lt;html:messages/&gt; tags.

empty=
bundlesForm.error.address=Address(default Bundle)
bundlesForm.error.phone=Phone Number(default Bundle)
bundlesForm.error.dob=Date of Birth(default Bundle)
bundlesForm.error.age=Age(default Bundle)
bundlesForm.errors.required=[Default Bundle]Missing Field: {0}
bundlesForm.errors.integer=[Default Bundle]Invalid Integer: {0}

# validwhen Example form
validWhen.title=validwhen Validation
validWhenExamples.title=validwhen Example Form
validWhenExamples.description=Examples of the <i>validwhen</i> validator.

validWhenForm.example.simple=Simple validwhen example
validWhenForm.example.simple.desc=The <i>Last Name</i> must be entered <b>IF</b> a <i>First Name</i> is present.
validWhenForm.firstName=First Name
validWhenForm.lastName=Last Name

validWhenForm.example.both=Both Fields Example
validWhenForm.example.both.desc=Either both the fields must be present <b>OR</b> both must be absent.
validWhenForm.error.both=Either enter both or neither

validWhenForm.example.numeric=Numeric Compare Example
validWhenForm.example.numeric.desc=Maximum value must be numeric and greater than the minimum.
validWhenForm.error.numeric=Maximum must be greater than the Minimum
validWhenForm.min=Minimum
validWhenForm.max=Maximum

validWhenForm.example.address=Address Validation example
validWhenForm.example.address.desc=If any one of the address fields is present then <i>Address Line 1</i>, <i>City</i> and <i>State</i> must be present. <i>Address Line 2</i> is optional.
validWhenForm.address1=Address Line 1
validWhenForm.address2=Address Line 2
validWhenForm.city=City
validWhenForm.zip=Zip Code

validWhenExamples.notes.heading=Tips on Using the <i>validwhen</i> Validator
validWhenExamples.notes1=Check Out the <a href="http://struts.apache.org/userGuide/dev_validator.html#validwhen">User Guide</a>.
validWhenExamples.notes2=<i>Greater Than</i> and <i>Less Than</i> (i.e. <b>&gt;</b> and <b>&lt;</b>) can't be used directly in the validation.xml - you need to use  <b>&amp;gt;</b> and <b>&amp;lt;</b> instead.
validWhenExamples.notes3=<b>All comparisons must be enclosed in parens</b>
validWhenExamples.notes4=<b>Only two items may be joined with <i>and</i> or <i>or</i></b> - so that means if you want to test three separate things, you need to use parenthesis (brackets) appropriately - see the address validation above.

validWhenExamples.problems.heading=Issues When (trying) to Use the <i>validwhen</i> Validator
validWhenExamples.problems1=<b>java.lang.NoClassDefFoundError antlr.TokenStream</b> - validwhen requires <b>antlr.jar</b> - its distributed in the Struts binary distribution in the <i>lib</i> folder along with all the other jars.
validWhenExamples.problems2=<b><i>JavaScript</i> Validation Not Working</b> - There is no JavaScript validator for validwhen - its server side only
validWhenExamples.problems3=<b>unexpected token: OR Error</b> - tokens <i><b>and</b></i> and <i><b>or</b></i> should be <b>lower case</b>
validWhenExamples.problems4=<b>Other <i>unexpected token</i> Errors</b> - somethings wrong with the test's value - the expression can't be parsed. You need to check it carefully to make sure its correctly specified.
validWhenExamples.problems5=<i>Its Not Working!</i> - check the logs / console for any exceptions.


# Locale Form
localeForm.fr=There are some differences on the Registration Form, JavaScript Registration Form, and Multi-page Registration form (see /WEB-INF/validation.xml).  On the Type Form and JavaScript Type Form the integer field should fall in a range of 50-60 and the date field should have a format of 'dd.MM.yyyy'.
localeForm.frCA=On the JavaScript Type Form the integer field should fall in a range of 100-200 and the date field should have a format of 'dd-MM-yyyy'.

localeForm.ja=On the JavaScript Type Form the integer field should fall in a range of 400-700 and the date field should have a format of 'yyyy/MM/dd'.